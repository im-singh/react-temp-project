[{"C:\\Users\\mohinder\\Desktop\\temp\\react-temp-project\\src\\ChatApp\\ChatApp.js":"1","C:\\Users\\mohinder\\Desktop\\temp\\react-temp-project\\src\\ChatApp\\RenderUsers.js":"2","C:\\Users\\mohinder\\Desktop\\temp\\react-temp-project\\src\\ChatApp\\RenderMessages.js":"3","C:\\Users\\mohinder\\Desktop\\temp\\react-temp-project\\src\\ChatApp\\SelectedUser.js":"4"},{"size":4404,"mtime":1617691772218,"results":"5","hashOfConfig":"6"},{"size":495,"mtime":1617687782022,"results":"7","hashOfConfig":"6"},{"size":1097,"mtime":1617693246824,"results":"8","hashOfConfig":"6"},{"size":254,"mtime":1617690152940,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"6v62x",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mohinder\\Desktop\\temp\\react-temp-project\\src\\ChatApp\\ChatApp.js",["20","21","22"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport SC from '../SocketExample/socket';\r\nimport RenderUsers from './RenderUsers';\r\nimport RenderMessages from './RenderMessages';\r\nimport SelectedUser from './SelectedUser';\r\n\r\n\r\nexport default function ChatApp() {\r\n    const [isConnected, setConnection] = useState(false);\r\n    const [username, setUserName] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [self, setSelf] = useState({});\r\n    const [selectedUser, selectUserToMsg] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [msgList, setMsgList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        SC.subscribeToEvent(\"private_message\", handleMessage);\r\n        SC.subscribeToEvent(\"connect_error\", handleSocketError);\r\n        SC.subscribeToEvent(\"users\", handleUsers);\r\n        SC.subscribeToEvent(\"user_connected\", handleNewUser);\r\n        return () => {\r\n            SC.unsubscribeFromEvent(\"private_message\", handleMessage);\r\n            SC.unsubscribeFromEvent(\"connect_error\", handleSocketError);\r\n            SC.unsubscribeFromEvent(\"users\", handleUsers);\r\n            SC.unsubscribeFromEvent(\"user_connected\", handleNewUser);\r\n        };\r\n    }, [isConnected, users, msgList]);\r\n  \r\n    const connectToSocket = () => {\r\n        // console.log(\"username: \", username);\r\n        SC.connectSocket(username);\r\n        setConnection(true)\r\n    }\r\n    const handleMessage = (data) => {\r\n        // // console.log('Content: ', content, from);\r\n        // let sender = users.filter(ele => ele.userID === from);\r\n        // // console.log(\"sernder: \", sender);\r\n        // let newObj = { ...sender[0] }\r\n        // // let newObj = sender[0]\r\n        // // console.log(\"newOJB: \", newObj)\r\n        // let msg = { sender: newObj, content };\r\n        addMessageToList(data);\r\n    }\r\n    const addMessageToList=(msg)=>{\r\n        let newList = [...msgList];\r\n        newList.push(msg);\r\n        setMsgList(newList);\r\n    }\r\n    const handleNewUser = (user) => {\r\n        // console.log(\"ðŸš€ ~ file: ChatApp.js ~ line 44 ~ handleNewUser ~ user\", user)\r\n        console.log(\"hNU: \", users, user);\r\n        let otherUsers = [...users, user]\r\n        setUsers(otherUsers);\r\n    }\r\n    const handleUsers = (users) => {\r\n        let id = SC.returnId();\r\n        let otherUsers = [];\r\n        users.forEach(u => {\r\n            if (id === u.userID) {\r\n                setSelf(u);\r\n            }\r\n            else {\r\n                otherUsers.push(u);\r\n            }\r\n        })\r\n        console.log(\"ohters; \", otherUsers);\r\n        setUsers(otherUsers);\r\n    }\r\n    const handleSocketError = (err) => {\r\n        console.log(\"ERR: Socket: \", err);\r\n    }\r\n    const selectUser = v => {\r\n        // console.log(\"ðŸš€ ~ file: ChatApp.js ~ line 55 ~ ChatApp ~ v\", v)\r\n        selectUserToMsg(v);\r\n    }\r\n    const sendMessage = () => {\r\n\r\n        let msg={content:message,sender:self.userID,reciver:selectedUser.userID};\r\n        addMessageToList(msg);\r\n        SC.emitAction(\"private_message\", msg)\r\n    }\r\n    const showUser = () => {\r\n        console.log(\"showusers; \", users);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"chat-container\">\r\n            {!isConnected && <div>\r\n                Connect to user:\r\n                <input type=\"text\" onChange={(e) => setUserName(e.target.value)} />\r\n                <button onClick={connectToSocket}>connect</button>\r\n            </div>\r\n            }\r\n            <div className=\"self\">\r\n                User:<span>{self.username}</span>\r\n            </div>\r\n            <div className=\"chat-box\">\r\n                <div className=\"users\">\r\n                    <RenderUsers \r\n                        otherUsers={users} \r\n                        selectedUser={selectedUser}\r\n                        selectUser={selectUser} \r\n                    />\r\n                </div>\r\n                <div className=\"messages\">\r\n                    <SelectedUser user={selectedUser}/>\r\n                    <RenderMessages msgList={msgList} selfUser={self} selectedUser={selectedUser}/>\r\n\r\n                    <div className=\"message-box\">\r\n                        <input type=\"text\" onChange={(e) => setMessage(e.target.value)} />\r\n                        <button onClick={sendMessage}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n","C:\\Users\\mohinder\\Desktop\\temp\\react-temp-project\\src\\ChatApp\\RenderUsers.js",[],"C:\\Users\\mohinder\\Desktop\\temp\\react-temp-project\\src\\ChatApp\\RenderMessages.js",["23"],"import React, { useEffect } from 'react';\r\n\r\nfunction RenderMessages({ msgList,selfUser,selectedUser }) {\r\n\r\n    const isSent=(ele)=>{\r\n        return ele.sender===selfUser.userID?\"right\":\"left\";\r\n    }\r\n    const renderMessage=(ele,idx)=>{\r\n        let senderId=ele.sender;\r\n        let reciverId=ele.reciver;\r\n        console.log(\"msg: \",ele)\r\n        console.log(\"self: selected: \",selfUser,selectedUser)\r\n        if((senderId===selfUser.userID && reciverId===selectedUser.userID)|| (senderId===selectedUser.userID && reciverId===selfUser.userID)){\r\n            console.log(\"done\")\r\n           \r\n           return <div key={idx} className={isSent(ele)}>\r\n                       <span>{ele.content}</span>\r\n                    </div>\r\n        }\r\n    }\r\n    // console.log(\"msgList: \",msgList);\r\n    return (\r\n        <div className=\"content\">\r\n            <ol>\r\n                {msgList.length > 0 && msgList.map((ele,idx) => {\r\n                    return renderMessage(ele,idx)\r\n                })\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\nexport default RenderMessages;","C:\\Users\\mohinder\\Desktop\\temp\\react-temp-project\\src\\ChatApp\\SelectedUser.js",[],{"ruleId":"24","severity":1,"message":"25","line":1,"column":17,"nodeType":"26","messageId":"27","endLine":1,"endColumn":25},{"ruleId":"28","severity":1,"message":"29","line":29,"column":8,"nodeType":"30","endLine":29,"endColumn":37,"suggestions":"31"},{"ruleId":"24","severity":1,"message":"32","line":84,"column":11,"nodeType":"26","messageId":"27","endLine":84,"endColumn":19},{"ruleId":"24","severity":1,"message":"33","line":1,"column":17,"nodeType":"26","messageId":"27","endLine":1,"endColumn":26},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleMessage' and 'handleNewUser'. Either include them or remove the dependency array.","ArrayExpression",["34"],"'showUser' is assigned a value but never used.","'useEffect' is defined but never used.",{"desc":"35","fix":"36"},"Update the dependencies array to be: [isConnected, users, msgList, handleMessage, handleNewUser]",{"range":"37","text":"38"},[1228,1257],"[isConnected, users, msgList, handleMessage, handleNewUser]"]